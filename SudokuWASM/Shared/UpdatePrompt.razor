@* SudokuWASM/Shared/UpdatePrompt.razor *@
@using Sudoku.Services
@inject IUpdateChecker UpdateChecker
@inject IJSRuntime JSRuntime
@implements IDisposable

@if (isUpdateAvailable)
{
    <div class="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
        <div class="bg-white p-4 rounded-lg shadow-lg max-w-sm w-full">
            <p class="mb-4">A new version of Sudoku is available.</p>
            <div class="flex justify-end space-x-2">
                <button class="bg-brandBackground hover:bg-brandBackgroundHover text-foregroundOnBrand py-1 px-3 rounded"
                        @onclick="ReloadApp">
                    Reload
                </button>
                <button class="bg-stroke hover:bg-strokeHover text-foreground py-1 px-3 rounded"
                        @onclick="Dismiss">
                    Later
                </button>
            </div>
        </div>
    </div>
}

@code {
    private bool isUpdateAvailable = false;

    protected override void OnInitialized()
    {
        UpdateChecker.OnUpdateAvailable += HandleUpdateAvailable;
    }

    private void HandleUpdateAvailable()
    {
        isUpdateAvailable = true;
        StateHasChanged();
    }

    private async Task ReloadApp()
    {
        await UpdateChecker.SkipWaitingAsync();
        await JSRuntime.InvokeVoidAsync("location.reload");
    }

    private void Dismiss()
    {
        isUpdateAvailable = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        UpdateChecker.OnUpdateAvailable -= HandleUpdateAvailable;
    }
}
