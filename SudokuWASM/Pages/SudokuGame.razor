@page "/game"
@using Sudoku.Models
@using SudokuWASM.Components

<GameOptionsModal Show="showOptionsModal" OnStart="CreateNewGameAsync"
                  OnCancel="() => ToggleOptionsModal(false)" />

<button class="m-4 px-4 py-2 rounded bg-brandBackground hover:bg-brandBackgroundHover text-foregroundOnBrand"
        @onclick="() => ToggleOptionsModal(true)">
    New Game
</button>

<!-- Status bar -->
<StatusBar IsLoading="!isInitialized"
           IsPointsAnimating="isPointsAnimating"
           DisplayScore="@GameEngine.CurrentScore.ToString("N0")"
           ElapsedTime="@GameEngine.ElapsedTime"
           HintCount="@GameEngine.HintCount"
           WrongGuessCount="@GameEngine.WrongGuessCount"
           MaxWrongGuesses="@MaxWrongGuesses"
           Message="@GameEngine.Message" />

@if (GameEngine.Board is null)
{
    <LoadingScreen />
}
else
{
    <SudokuGrid Board="GameEngine.Board"
                IsGamePaused="GameEngine.IsGamePaused"
                OnGridClick="OnGridClick"
                OnCellClick="OnCellClickTuple"
                GetCellCSS="GetCellCSS"
                GetCellTextCSS="GetCellTextCSS"
                NotesTextClass="@GetNotesTextCSS(false)"
                IsMobile="false"
                OnResumeGame="GameEngine.ResumeGame" />
    <GameControls OnNewGame="() => ToggleOptionsModal(true)"
                  OnShowStatistics="ShowStatisticsAsync"
                  OnUndo="Undo"
                  OnErase="Erase"
                  OnTogglePencilMode="TogglePencilMode"
                  OnGiveHint="GiveHint"
                  IsGameDisabled="(GameEngine.IsGamePaused || GameEngine.IsGameOver || GameEngine.IsGameWon)"
                  CanUndo="(GameEngine.SelectedCell != null && GameEngine.Board != null && GameEngine.Board.CanEditCell(GameEngine.SelectedCell.Value.row, GameEngine.SelectedCell.Value.col))"
                  CanErase="(GameEngine.SelectedCell != null && GameEngine.Board != null && GameEngine.Board.CanEditCell(GameEngine.SelectedCell.Value.row, GameEngine.SelectedCell.Value.col))"
                  CanGiveHint="(GameEngine.Board != null && !GameEngine.IsGamePaused)"
                  IsPencilMode="GameEngine.PencilMode" />
}

<StatisticsModal IsVisible="showStatistics"
                 Statistics="GameEngine.Statistics"
                 OnClose="HideStatistics"
                 OnClearStats="RequestClearStats" />

<ConfirmDialog IsVisible="showConfirmClearStats"
               Message="Are you sure you want to clear all statistics?"
               OnConfirm="ConfirmClearStats"
               OnCancel="() => showConfirmClearStats = false" />

