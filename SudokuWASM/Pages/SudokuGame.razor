@page "/game"
@using Sudoku.Models
@using SudokuWASM.Components

<GameOptionsModal Show="showOptionsModal" OnStart="CreateNewGameAsync"
                  OnCancel="() => ToggleOptionsModal(false)" />

<button class="m-4 px-4 py-2 rounded bg-brandBackground hover:bg-brandBackgroundHover text-foregroundOnBrand"
        @onclick="() => ToggleOptionsModal(true)">
    New Game
</button>

@* Status bar with points animation *@
@if (board is not null)
{
    <div class="my-4 text-center">
        <div class="text-xl font-semibold transition-all duration-300 @(isPointsAnimating ? "animate-bounce text-green-600" : "text-gray-800")">
            Score: @DisplayScore
        </div>
        <div class="text-sm text-gray-600">
            Time: @elapsedTime • Hints: @hintCount • Wrong: @wrongGuessCount / @maxWrongGuesses
        </div>
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="mt-1 text-sm text-blue-600">@message</div>
        }
    </div>
}

@if (board is null)
{
    <LoadingScreen />
}
else
{
    <SudokuGrid Board="board" />
    <GameControls OnNewGame="() => ToggleOptionsModal(true)"
                  OnShowStatistics="ShowStatisticsAsync"
                  OnUndo="Undo"
                  OnErase="Erase"
                  OnTogglePencilMode="TogglePencilMode"
                  OnGiveHint="GiveHint"
                  IsGameDisabled="@((isGamePaused || isGameOver || isGameWon))"
                  CanUndo="@(selectedCell != null && board != null && board.CanEditCell(selectedCell.Value.row, selectedCell.Value.col))"
                  CanErase="@(selectedCell != null && board != null && board.CanEditCell(selectedCell.Value.row, selectedCell.Value.col))"
                  CanGiveHint="@(board != null && !isGamePaused)"
                  IsPencilMode="@pencilMode" />
}

<StatisticsModal IsVisible="showStatistics"
                 Statistics="gameStatistics"
                 OnClose="HideStatistics"
                 OnClearStats="RequestClearStats" />

@if (showConfirmClearStats)
{
    <div class="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
        <div class="bg-white p-4 rounded-lg shadow-lg">
            <p class="mb-4">Are you sure you want to clear all statistics?</p>
            <div class="flex space-x-2">
                <button class="bg-red-500 text-white py-1 px-3 rounded" @onclick="ConfirmClearStats">
                    Yes, clear
                </button>
                <button class="bg-gray-300 text-gray-700 py-1 px-3 rounded" @onclick="() => showConfirmClearStats = false">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}

